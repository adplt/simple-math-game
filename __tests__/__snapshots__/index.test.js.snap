// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flexGrow": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "flexDirection": "column-reverse",
          },
          Object {
            "backgroundColor": "#000",
          },
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          collapsable={undefined}
          pointerEvents="auto"
          style={
            Object {
              "backgroundColor": "#E9E9EF",
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "shadowColor": "black",
              "shadowOffset": Object {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0.2,
              "shadowRadius": 5,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F5FCFF",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 20,
                  "margin": 10,
                  "textAlign": "center",
                }
              }
            >
              Welcome to React Native!
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#333333",
                  "marginBottom": 5,
                  "textAlign": "center",
                }
              }
            >
              To get started, edit Index.js
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#333333",
                  "marginBottom": 5,
                  "textAlign": "center",
                }
              }
            >
              Press Cmd+R to reload,
Cmd+D or shake for dev menu
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideOnBack={false}
    onModalHide={[Function]}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
      testID={undefined}
    />
    <View
      collapsable={undefined}
      hideOnBack={false}
      onModalHide={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 0,
          "padding": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      transparent={true}
    >
      <View
        contentContainerStyle={
          Object {
            "flex": 1,
          }
        }
        extraHeight={120}
        keyboardShouldPersistTaps="handled"
        scrollEnabled={false}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "#FFF",
                "flex": 1,
                "justifyContent": "center",
                "padding": 20,
              },
              Object {},
            ]
          }
          testID={undefined}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "padding": 20,
                },
                Object {},
              ]
            }
            testID={undefined}
          />
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
